package codigo;

import java_cup.runtime.Symbol;

parser code
{:
    private Symbol s;
    
    public void syntax_error(Symbol s){
        this.s = s;
    }

    public Symbol getS(){
        return this.s;
}
:};

terminal Comillas, T_dato, If, Else, Do, While, For,
    Igual, Suma, Resta, Multiplicacion, Division, Op_logico, Op_relacional,
    Op_atribucion, Op_incremento, Op_booleano, Parentesis_a, Parentesis_c,
    Llave_a, Llave_c, Corchete_a, Corchete_c, Main, P_coma, Identificador,
    Numero,Math ,Coma , Void , Return, Cadena, Char , Imprimir, Ingresar, Mod, Raiz , Pow ,Break , ERROR ;
non terminal INICIO, SENTENCIA, DECLARACION, DECLARACION_FOR, IF, IF_ELSE,
    WHILE, DO_WHILE, FOR, SENTENCIA_BOOLEANA, SENTENCIA_FOR , DECLARACION_SENO,DECLARACION_OPERACION,MIXTA , 
    PARAMETROS ,DECLARACION_FUNCION ,FUNCIONES , LLAMAR_FUNCIONES ,PARAMETROS_SIN, VALORES , DECLARACION_ARREGLO , 
    MATRIX, IMPRIMIR, CONCATENACION, INGRESAR , FORMULA_GENERAL , RAIZ , POTENCIA, PARENTESIS , BREAK ;

start with INICIO;

INICIO ::= 
    T_dato Main Parentesis_a Parentesis_c INICIO |  Main Parentesis_a Parentesis_c INICIO | LLAMAR_FUNCIONES Main Parentesis_a Parentesis_c INICIO | 
    FUNCIONES Main Parentesis_a Parentesis_c  INICIO | FUNCIONES T_dato Main Parentesis_a Parentesis_c INICIO |
    Llave_a SENTENCIA Return Numero P_coma Llave_c | Llave_a Return Numero P_coma Llave_c |Llave_a Return Numero P_coma Llave_c FUNCIONES |
    Llave_a SENTENCIA Llave_c |Llave_a Llave_c |Llave_a Llave_c FUNCIONES | Llave_a SENTENCIA Llave_c FUNCIONES 
;
SENTENCIA ::= 
    SENTENCIA DECLARACION | DECLARACION |
    SENTENCIA IF | IF |
    SENTENCIA IF_ELSE |IF_ELSE |
    SENTENCIA WHILE |WHILE |
    SENTENCIA DO_WHILE | DO_WHILE |
    SENTENCIA FOR |FOR |
    SENTENCIA DECLARACION_SENO | DECLARACION_SENO |
    SENTENCIA DECLARACION_OPERACION |DECLARACION_OPERACION |
    SENTENCIA LLAMAR_FUNCIONES |LLAMAR_FUNCIONES |
    SENTENCIA DECLARACION_ARREGLO |DECLARACION_ARREGLO |
    SENTENCIA IMPRIMIR |IMPRIMIR | 
    SENTENCIA INGRESAR |INGRESAR
    SENTENCIA BREAK | BREAK
;
DECLARACION ::= 
    T_dato Identificador P_coma | T_dato Identificador DECLARACION | Identificador DECLARACION | Op_atribucion Numero P_coma | 
    Igual Numero P_coma |  Op_incremento P_coma | Op_incremento Identificador P_coma |Op_atribucion Cadena P_coma | 
    Igual Cadena P_coma | Op_atribucion Char P_coma | Igual Char P_coma | Igual Identificador P_coma |Op_atribucion Identificador Resta Numero P_coma | 
    Igual Op_booleano P_coma | Op_atribucion POTENCIA Division Identificador Parentesis_a Identificador Parentesis_c P_coma |   
    Ingresar Parentesis_a Cadena Coma Identificador Parentesis_c P_coma 
;
IF ::= If Parentesis_a SENTENCIA_BOOLEANA Parentesis_c Llave_a SENTENCIA Llave_c
;
SENTENCIA_BOOLEANA ::= 
    Op_booleano |Numero |Identificador |Comillas Comillas |Comillas Identificador Comillas |
    Identificador Resta Numero Op_relacional Numero |Identificador Mod Numero Op_relacional Numero |Identificador Op_relacional SENTENCIA_BOOLEANA
;
IF_ELSE ::= If Parentesis_a SENTENCIA_BOOLEANA Parentesis_c Llave_a SENTENCIA Llave_c Else Llave_a SENTENCIA Llave_c
;
WHILE ::= While Parentesis_a SENTENCIA_BOOLEANA Parentesis_c Llave_a SENTENCIA Llave_c
;
DO_WHILE ::= Do Llave_a SENTENCIA Llave_c While Parentesis_a SENTENCIA_BOOLEANA Parentesis_c P_coma
;
FOR ::= For Parentesis_a SENTENCIA_FOR Parentesis_c Llave_a SENTENCIA Llave_c
;
SENTENCIA_FOR ::=
    T_dato Identificador Igual Numero P_coma SENTENCIA_BOOLEANA P_coma DECLARACION_FOR |
    Identificador Igual Numero P_coma SENTENCIA_BOOLEANA P_coma DECLARACION_FOR
;
DECLARACION_FOR ::= 
    Identificador DECLARACION_FOR | Op_atribucion Numero |Op_incremento | Op_incremento Identificador
;
DECLARACION_SENO ::=
    Math Parentesis_a Numero Parentesis_c P_coma
;

MIXTA ::= 
    Multiplicacion | Suma | Division | Resta |Suma MIXTA | Resta MIXTA | Multiplicacion MIXTA | Division MIXTA | 
    Numero MIXTA | Identificador MIXTA | Identificador | Numero | POTENCIA MIXTA | RAIZ MIXTA | PARENTESIS MIXTA | PARENTESIS
;

DECLARACION_OPERACION ::= 
    T_dato Identificador Igual DECLARACION_OPERACION | Numero MIXTA P_coma| Identificador Igual Numero MIXTA P_coma| Identificador Op_atribucion Numero MIXTA P_coma | 
    Identificador MIXTA P_coma| Identificador Igual Identificador MIXTA P_coma |Identificador Igual Parentesis_a Numero Parentesis_c MIXTA P_coma |
    Identificador Igual Parentesis_a DECLARACION_OPERACION |Parentesis_a Resta Identificador MIXTA Parentesis_c P_coma |  Parentesis_a Numero Parentesis_c MIXTA P_coma | 
    Resta Identificador MIXTA Parentesis_c P_coma |Suma Identificador MIXTA Parentesis_c P_coma | Parentesis_a Suma Identificador MIXTA Parentesis_c P_coma | FORMULA_GENERAL 
;

FORMULA_GENERAL::=
    T_dato FORMULA_GENERAL |Identificador Igual Parentesis_a Resta Identificador FORMULA_GENERAL | 
    Suma RAIZ Division PARENTESIS P_coma |Resta RAIZ Division PARENTESIS P_coma 
;

PARENTESIS::=
    Parentesis_a MIXTA Parentesis_c 
;

PARAMETROS ::=
   T_dato Identificador | T_dato Identificador Coma PARAMETROS 
;

PARAMETROS_SIN ::=
   Identificador Coma PARAMETROS_SIN 
;


DECLARACION_FUNCION ::= 
   Void Identificador Parentesis_a DECLARACION_FUNCION | Parentesis_c Llave_a Llave_c |Parentesis_c Llave_a SENTENCIA Llave_c | 
   T_dato Identificador Parentesis_a DECLARACION_FUNCION | Parentesis_c Llave_a SENTENCIA Return Identificador P_coma Llave_c |
   PARAMETROS Parentesis_c Llave_a SENTENCIA Return Identificador P_coma Llave_c 
;

LLAMAR_FUNCIONES::=
    Identificador Parentesis_a LLAMAR_FUNCIONES |Void Identificador Parentesis_a LLAMAR_FUNCIONES | T_dato Identificador Parentesis_a LLAMAR_FUNCIONES |
    Parentesis_c P_coma | PARAMETROS_SIN Parentesis_c P_coma | PARAMETROS Parentesis_c P_coma 
;

FUNCIONES ::=
   DECLARACION_FUNCION | FUNCIONES DECLARACION_FUNCION
;

VALORES ::=
   Numero | Cadena | Char | Identificador | Numero VALORES | Cadena VALORES | Char VALORES | Identificador VALORES | Coma VALORES
;

MATRIX ::=
   Llave_a VALORES Llave_c |  Llave_a VALORES Llave_c Coma MATRIX | Llave_a MATRIX Llave_c 
;

CONCATENACION ::=
    Cadena | Identificador | Numero | Char | Cadena Suma CONCATENACION | Identificador Suma CONCATENACION  | 
    Numero Suma CONCATENACION | Char Suma CONCATENACION | Cadena Coma CONCATENACION | Identificador Coma CONCATENACION  | 
    Numero Coma CONCATENACION | Char Coma CONCATENACION 
;

IMPRIMIR ::=
   Imprimir Parentesis_a CONCATENACION Parentesis_c P_coma 
;

INGRESAR ::=
   T_dato Identificador Igual Ingresar INGRESAR |  Identificador Igual Ingresar  INGRESAR |Parentesis_a Cadena Parentesis_c P_coma |Parentesis_a Parentesis_c P_coma |
   Ingresar Parentesis_a Cadena Coma  Op_logico Identificador Parentesis_c P_coma
;

POTENCIA::=
    Pow Parentesis_a Numero Coma Numero Parentesis_c | Pow Parentesis_a Identificador Coma Numero Parentesis_c  |
    Pow Parentesis_a Numero Coma Identificador Parentesis_c | Pow Parentesis_a Identificador Coma Identificador Parentesis_c | POTENCIA P_coma
;

RAIZ::=
    Raiz Parentesis_a MIXTA Parentesis_c |RAIZ P_coma | RAIZ Parentesis_c 
;

DECLARACION_ARREGLO ::=
    Numero Corchete_c P_coma | Numero Corchete_c Igual Llave_a VALORES Llave_c P_coma |Corchete_c P_coma | T_dato  Corchete_a Corchete_c Identificador P_coma |
    Corchete_c Igual Llave_a VALORES Llave_c P_coma | T_dato Corchete_a Corchete_c Identificador Igual Llave_a VALORES Llave_c P_coma|Corchete_c Corchete_a Corchete_c P_coma | 
    Numero Corchete_c Corchete_a Numero Corchete_c P_coma |Corchete_c Corchete_a Corchete_c Igual MATRIX P_coma |Numero Corchete_c Corchete_a Numero Corchete_c Igual MATRIX P_coma | 
    T_dato Identificador Corchete_a DECLARACION_ARREGLO 
;

BREAK ::=
    Break P_coma
;